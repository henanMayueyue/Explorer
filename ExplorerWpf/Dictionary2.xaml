<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:local="clr-namespace:ExplorerWpf"
					xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Classic"
					xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
					xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d">
    <!--Control colors.-->
    <Color x:Key="WindowColor">#153685</Color>
    <Color x:Key="ContentAreaColorLight">#212650</Color>
    <Color x:Key="ContentAreaColorDark">#242953</Color>

    <Color x:Key="DisabledControlLightColor">#212650</Color>
    <Color x:Key="DisabledControlDarkColor">#212650</Color>
    <Color x:Key="DisabledForegroundColor">#212650</Color>

    <Color x:Key="SelectedBackgroundColor">#212650</Color>
    <Color x:Key="SelectedUnfocusedColor">#1A1F48</Color>

    <Color x:Key="ControlLightColor">#F3181B28</Color>
    <Color x:Key="ControlMediumColor">#F3181B29</Color>
    <Color x:Key="ControlDarkColor">#EB00FF</Color>

    <Color x:Key="ControlMouseOverColor">#F31E2234</Color>
    <Color x:Key="ControlPressedColor">#F31D2132</Color>


    <Color x:Key="GlyphColor">#FF186884</Color>
    <Color x:Key="GlyphMouseOver">sc#1, 0.004391443, 0.002428215, 0.242281124</Color>

    <SolidColorBrush x:Key="ScrolBarbackground" Color="#FF303651" />
    <SolidColorBrush x:Key="DefBack" Color="#FF181B28" />

    <LinearGradientBrush x:Key="MenuPopupBrush"
						 EndPoint="0.5,1"
						 StartPoint="0.5,0">
        <GradientStop Color="{DynamicResource ControlLightColor}"
					  Offset="0" />
        <GradientStop Color="{DynamicResource ControlMediumColor}"
					  Offset="0.5" />
        <GradientStop Color="{DynamicResource ControlLightColor}"
					  Offset="1" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ProgressBarIndicatorAnimatedFill"
						 StartPoint="0,0"
						 EndPoint="1,0">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#000000FF"
							  Offset="0" />
                <GradientStop Color="#600000FF"
							  Offset="0.4" />
                <GradientStop Color="#600000FF"
							  Offset="0.6" />
                <GradientStop Color="#000000FF"
							  Offset="1" />
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>


    <Style x:Key="{x:Type TreeView}"
		   TargetType="{x:Type TreeView}">
        <Setter Property="OverridesDefaultStyle"
				Value="True" />
        <Setter Property="SnapsToDevicePixels"
				Value="True" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
				Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility"
				Value="Auto" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeView}">
                    <Border x:Name="Border"
							CornerRadius="0"
							BorderThickness="1" Background="{TemplateBinding Background}"
							BorderBrush="{TemplateBinding BorderBrush}" OpacityMask="{TemplateBinding OpacityMask}">
                        <ScrollViewer Focusable="False" CanContentScroll="False" Padding="4"
									  
									  Background="{TemplateBinding Background}"
									  BorderBrush="{TemplateBinding BorderBrush}"
									  Foreground="{TemplateBinding Foreground}"
									  OpacityMask="{DynamicResource ScrolBarbackground}" Template="{DynamicResource ScrollViewerControlTemplate1}">
                            <ItemsPresenter />
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ExpandCollapseToggleStyle"
		   TargetType="{x:Type ToggleButton}">
        <Setter Property="Focusable"
				Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid Width="15"
						  Height="13"
						  Background="Transparent">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames
											Storyboard.TargetProperty="(UIElement.Visibility)"
											Storyboard.TargetName="Collapsed">
                                            <DiscreteObjectKeyFrame KeyTime="0"
																	Value="{x:Static Visibility.Hidden}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames
											Storyboard.TargetProperty="(UIElement.Visibility)"
											Storyboard.TargetName="Expanded">
                                            <DiscreteObjectKeyFrame KeyTime="0"
																	Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked" />
                                <VisualState x:Name="Indeterminate" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Path x:Name="Collapsed"
							  HorizontalAlignment="Left"
							  VerticalAlignment="Center"
							  Margin="1,1,1,1"
							  Data="M 4 0 L 8 4 L 4 8 Z">
                            <Path.Fill>
                                <SolidColorBrush Color="{DynamicResource GlyphColor}" />
                            </Path.Fill>
                        </Path>
                        <Path x:Name="Expanded"
							  HorizontalAlignment="Left"
							  VerticalAlignment="Center"
							  Margin="1,1,1,1"
							  Data="M 0 4 L 8 4 L 4 8 Z"
							  Visibility="Hidden">
                            <Path.Fill>
                                <SolidColorBrush Color="{DynamicResource GlyphColor}" />
                            </Path.Fill>
                        </Path>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TreeViewItemFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border>
                        <Rectangle Margin="0,0,0,0"
								   StrokeThickness="5"
								   Stroke="Black"
								   StrokeDashArray="1 2"
								   Opacity="0" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type TreeViewItem}"
		   TargetType="{x:Type TreeViewItem}">
        <Setter Property="Background"
				Value="Transparent" />
        <Setter Property="HorizontalContentAlignment"
				Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="VerticalContentAlignment"
				Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Padding"
				Value="1,0,0,0" />
        <Setter Property="Foreground"
				Value="{DynamicResource DynamicResourceControlTextBrushKey}" />
        <Setter Property="FocusVisualStyle"
				Value="{StaticResource TreeViewItemFocusVisual}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeViewItem}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition MinWidth="19"
											  Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Bd"
																	  Storyboard.TargetProperty="(Panel.Background).                     (SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0"
																 Value="{StaticResource SelectedBackgroundColor}" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unselected" />
                                <VisualState x:Name="SelectedInactive">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Bd"
																	  Storyboard.TargetProperty="(Panel.Background).                     (SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0"
																 Value="{StaticResource SelectedUnfocusedColor}" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ExpansionStates">
                                <VisualState x:Name="Expanded">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames
											Storyboard.TargetProperty="(UIElement.Visibility)"
											Storyboard.TargetName="ItemsHost">
                                            <DiscreteObjectKeyFrame KeyTime="0"
																	Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Collapsed" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ToggleButton x:Name="Expander"
									  Style="{StaticResource ExpandCollapseToggleStyle}"
									  ClickMode="Press"
									  IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" />
                        <Border x:Name="Bd"
								Grid.Column="1"
								Background="{TemplateBinding Background}"
								BorderBrush="{TemplateBinding BorderBrush}"
								BorderThickness="{TemplateBinding BorderThickness}"
								Padding="{TemplateBinding Padding}">
                            <ContentPresenter x:Name="PART_Header"
											  ContentSource="Header"
											  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" />
                        </Border>
                        <ItemsPresenter x:Name="ItemsHost"
										Grid.Row="1"
										Grid.Column="1"
										Grid.ColumnSpan="2"
										Visibility="Collapsed" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems"
								 Value="false">
                            <Setter TargetName="Expander"
									Property="Visibility"
									Value="Hidden" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="HasHeader"
										   Value="false" />
                                <Condition Property="Width"
										   Value="Auto" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Header"
									Property="MinWidth"
									Value="75" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="HasHeader"
										   Value="false" />
                                <Condition Property="Height"
										   Value="Auto" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Header"
									Property="MinHeight"
									Value="19" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollBarStyleH" TargetType="{x:Type ScrollBar}">
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="False" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Width" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
        <Setter Property="MinWidth" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid Background="{TemplateBinding Background}">
                        <Grid.RowDefinitions>
                            <RowDefinition
								MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}" />
                            <RowDefinition Height="1E-05*" />
                            <RowDefinition
								MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}" />
                        </Grid.RowDefinitions>
                        <Viewbox Stretch="Fill">
                            <RepeatButton Content="M 0 4 L 7 4 L 3.5 0 Z" Command="ScrollBar.LineUpCommand"
										  Height="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"
										  MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                                <RepeatButton.Style>
                                    <Style TargetType="{x:Type RepeatButton}">
                                        <Setter Property="OverridesDefaultStyle" Value="True" />
                                        <Setter Property="Background"
												Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
                                        <Setter Property="Foreground"
												Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
                                        <Setter Property="BorderBrush" Value="#00000000" />
                                        <Setter Property="BorderThickness" Value="2" />
                                        <Setter Property="MinWidth" Value="0" />
                                        <Setter Property="MinHeight" Value="0" />
                                        <Setter Property="IsTabStop" Value="False" />
                                        <Setter Property="Focusable" Value="False" />
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                    <Themes:ClassicBorderDecorator x:Name="ClassicBorder"
																				   BorderBrush="{TemplateBinding BorderBrush}"
																				   BorderThickness="{TemplateBinding BorderThickness}"
																				   BorderStyle="AltRaised"
																				   Background="{TemplateBinding Background}"
																				   Height="{TemplateBinding Height}"
																				   Width="{TemplateBinding Width}">
                                                        <Path
															Data="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}"
															Fill="{TemplateBinding Foreground}"
															HorizontalAlignment="Center" VerticalAlignment="Center" />
                                                    </Themes:ClassicBorderDecorator>
                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="IsPressed" Value="True">
                                                            <Setter Property="BorderStyle" TargetName="ClassicBorder"
																	Value="AltPressed" />
                                                        </Trigger>
                                                        <Trigger Property="IsEnabled" Value="False">
                                                            <Setter Property="Foreground"
																	Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" />
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </RepeatButton.Style>
                            </RepeatButton>
                        </Viewbox>
                        <Rectangle Grid.Row="1">
                            <Rectangle.Fill>
                                <SolidColorBrush Color="#FF181B28" Opacity="0.5" />
                            </Rectangle.Fill>
                        </Rectangle>
                        <Track x:Name="PART_Track" IsDirectionReversed="True" Grid.Row="1">
                            <Track.DecreaseRepeatButton>
                                <RepeatButton Command="ScrollBar.PageUpCommand">
                                    <RepeatButton.Style>
                                        <Style TargetType="{x:Type RepeatButton}">
                                            <Setter Property="OverridesDefaultStyle" Value="True" />
                                            <Setter Property="IsTabStop" Value="False" />
                                            <Setter Property="Focusable" Value="False" />
                                            <Setter Property="MinWidth"
													Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
                                            <Setter Property="MinHeight"
													Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}" />
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                        <Rectangle x:Name="PageButtonBackground" Fill="Transparent" />
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="IsPressed" Value="True">
                                                                <Setter Property="Fill"
																		TargetName="PageButtonBackground"
																		Value="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" />
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </RepeatButton.Style>
                                </RepeatButton>
                            </Track.DecreaseRepeatButton>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton Command="ScrollBar.PageDownCommand">
                                    <RepeatButton.Style>
                                        <Style TargetType="{x:Type RepeatButton}">
                                            <Setter Property="OverridesDefaultStyle" Value="True" />
                                            <Setter Property="IsTabStop" Value="False" />
                                            <Setter Property="Focusable" Value="False" />
                                            <Setter Property="MinWidth"
													Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
                                            <Setter Property="MinHeight"
													Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}" />
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                        <Rectangle x:Name="PageButtonBackground" Fill="Transparent" />
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="IsPressed" Value="True">
                                                                <Setter Property="Fill"
																		TargetName="PageButtonBackground"
																		Value="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" />
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </RepeatButton.Style>
                                </RepeatButton>
                            </Track.IncreaseRepeatButton>
                            <Track.Thumb>
                                <Thumb>
                                    <Thumb.Style>
                                        <Style TargetType="{x:Type Thumb}">
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type Thumb}">
                                                        <Themes:ClassicBorderDecorator BorderBrush="#00000000"
																					   BorderThickness="3"
																					   BorderStyle="Raised"
																					   Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </Thumb.Style>
                                </Thumb>
                            </Track.Thumb>
                        </Track>
                        <Viewbox Grid.Row="2" Stretch="Fill">
                            <RepeatButton Content="M 0 0 L 3.5 4 L 7 0 Z" Command="ScrollBar.LineDownCommand"
										  Height="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"
										  MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                                <RepeatButton.Style>
                                    <Style TargetType="{x:Type RepeatButton}">
                                        <Setter Property="OverridesDefaultStyle" Value="True" />
                                        <Setter Property="Background"
												Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
                                        <Setter Property="Foreground"
												Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
                                        <Setter Property="BorderBrush" Value="#00000000" />
                                        <Setter Property="BorderThickness" Value="2" />
                                        <Setter Property="MinWidth" Value="0" />
                                        <Setter Property="MinHeight" Value="0" />
                                        <Setter Property="IsTabStop" Value="False" />
                                        <Setter Property="Focusable" Value="False" />
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                    <Themes:ClassicBorderDecorator x:Name="ClassicBorder"
																				   BorderBrush="{TemplateBinding BorderBrush}"
																				   BorderThickness="{TemplateBinding BorderThickness}"
																				   BorderStyle="AltRaised"
																				   Background="{TemplateBinding Background}"
																				   Height="{TemplateBinding Height}"
																				   Width="{TemplateBinding Width}">
                                                        <Path
															Data="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}"
															Fill="{TemplateBinding Foreground}"
															HorizontalAlignment="Center" VerticalAlignment="Center" />
                                                    </Themes:ClassicBorderDecorator>
                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="IsPressed" Value="True">
                                                            <Setter Property="BorderStyle" TargetName="ClassicBorder"
																	Value="AltPressed" />
                                                        </Trigger>
                                                        <Trigger Property="IsEnabled" Value="False">
                                                            <Setter Property="Foreground"
																	Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" />
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </RepeatButton.Style>
                            </RepeatButton>
                        </Viewbox>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Width" Value="Auto" />
                <Setter Property="MinWidth" Value="0" />
                <Setter Property="Height"
						Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}" />
                <Setter Property="MinHeight"
						Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                            <Grid Background="{TemplateBinding Background}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition
										MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}" />
                                    <ColumnDefinition Width="1E-05*" />
                                    <ColumnDefinition
										MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}" />
                                </Grid.ColumnDefinitions>
                                <Viewbox Stretch="Fill">
                                    <RepeatButton Content="M 0 4 L 4 8 L 4 0 Z" Command="ScrollBar.LineLeftCommand"
												  MinHeight="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"
												  Width="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"
												  Background="{TemplateBinding Foreground}"
												  BorderBrush="{TemplateBinding BorderBrush}"
												  Foreground="{TemplateBinding Background}">
                                        <RepeatButton.Style>
                                            <Style TargetType="{x:Type RepeatButton}">
                                                <Setter Property="OverridesDefaultStyle" Value="True" />
                                                <Setter Property="Background"
														Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
                                                <Setter Property="Foreground"
														Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
                                                <Setter Property="BorderBrush" Value="#00000000" />
                                                <Setter Property="BorderThickness" Value="2" />
                                                <Setter Property="MinWidth" Value="0" />
                                                <Setter Property="MinHeight" Value="0" />
                                                <Setter Property="IsTabStop" Value="False" />
                                                <Setter Property="Focusable" Value="False" />
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                            <Themes:ClassicBorderDecorator x:Name="ClassicBorder"
																						   BorderBrush="{TemplateBinding BorderBrush}"
																						   BorderThickness="{TemplateBinding BorderThickness}"
																						   BorderStyle="AltRaised"
																						   Background="{TemplateBinding Background}"
																						   Height="{TemplateBinding Height}"
																						   Width="{TemplateBinding Width}">
                                                                <Path
																	Data="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}"
																	Fill="{TemplateBinding Foreground}"
																	HorizontalAlignment="Center"
																	VerticalAlignment="Center" />
                                                            </Themes:ClassicBorderDecorator>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="IsPressed" Value="True">
                                                                    <Setter Property="BorderStyle"
																			TargetName="ClassicBorder"
																			Value="AltPressed" />
                                                                </Trigger>
                                                                <Trigger Property="IsEnabled" Value="False">
                                                                    <Setter Property="Foreground"
																			Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" />
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </RepeatButton.Style>
                                    </RepeatButton>
                                </Viewbox>
                                <Rectangle Grid.Column="1">
                                    <Rectangle.Fill>
                                        <SolidColorBrush Color="#FF181B28" Opacity="0.5" />
                                    </Rectangle.Fill>
                                </Rectangle>
                                <Track x:Name="PART_Track" Grid.Column="1">
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton Command="ScrollBar.PageLeftCommand">
                                            <RepeatButton.Style>
                                                <Style TargetType="{x:Type RepeatButton}">
                                                    <Setter Property="OverridesDefaultStyle" Value="True" />
                                                    <Setter Property="IsTabStop" Value="False" />
                                                    <Setter Property="Focusable" Value="False" />
                                                    <Setter Property="MinHeight"
															Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}" />
                                                    <Setter Property="MinWidth"
															Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}" />
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                <Rectangle x:Name="PageButtonBackground"
																		   Fill="Transparent" />
                                                                <ControlTemplate.Triggers>
                                                                    <Trigger Property="IsPressed" Value="True">
                                                                        <Setter Property="Fill"
																				TargetName="PageButtonBackground"
																				Value="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" />
                                                                    </Trigger>
                                                                </ControlTemplate.Triggers>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Style>
                                            </RepeatButton.Style>
                                        </RepeatButton>
                                    </Track.DecreaseRepeatButton>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton Command="ScrollBar.PageRightCommand">
                                            <RepeatButton.Style>
                                                <Style TargetType="{x:Type RepeatButton}">
                                                    <Setter Property="OverridesDefaultStyle" Value="True" />
                                                    <Setter Property="IsTabStop" Value="False" />
                                                    <Setter Property="Focusable" Value="False" />
                                                    <Setter Property="MinHeight"
															Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}" />
                                                    <Setter Property="MinWidth"
															Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}" />
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                <Rectangle x:Name="PageButtonBackground"
																		   Fill="Transparent" />
                                                                <ControlTemplate.Triggers>
                                                                    <Trigger Property="IsPressed" Value="True">
                                                                        <Setter Property="Fill"
																				TargetName="PageButtonBackground"
																				Value="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" />
                                                                    </Trigger>
                                                                </ControlTemplate.Triggers>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Style>
                                            </RepeatButton.Style>
                                        </RepeatButton>
                                    </Track.IncreaseRepeatButton>
                                    <Track.Thumb>
                                        <Thumb Background="{TemplateBinding Background}"
											   BorderBrush="{TemplateBinding BorderBrush}"
											   Foreground="{TemplateBinding Foreground}">
                                            <Thumb.Style>
                                                <Style TargetType="{x:Type Thumb}">
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="{x:Type Thumb}">
                                                                <Themes:ClassicBorderDecorator BorderBrush="#00000000"
																							   BorderThickness="3"
																							   BorderStyle="Raised"
																							   Background="{TemplateBinding Foreground}" />
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Style>
                                            </Thumb.Style>
                                        </Thumb>
                                    </Track.Thumb>
                                </Track>
                                <Viewbox Grid.Column="2" Stretch="Fill">
                                    <RepeatButton Content="M 0 0 L 0 8 L 4 4 Z" Command="ScrollBar.LineRightCommand"
												  MinHeight="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"
												  Width="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"
												  Background="{TemplateBinding Foreground}"
												  BorderBrush="{TemplateBinding BorderBrush}"
												  Foreground="{TemplateBinding Background}">
                                        <RepeatButton.Style>
                                            <Style TargetType="{x:Type RepeatButton}">
                                                <Setter Property="OverridesDefaultStyle" Value="True" />
                                                <Setter Property="Background"
														Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
                                                <Setter Property="Foreground"
														Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
                                                <Setter Property="BorderBrush" Value="#00000000" />
                                                <Setter Property="BorderThickness" Value="2" />
                                                <Setter Property="MinWidth" Value="0" />
                                                <Setter Property="MinHeight" Value="0" />
                                                <Setter Property="IsTabStop" Value="False" />
                                                <Setter Property="Focusable" Value="False" />
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                            <Themes:ClassicBorderDecorator x:Name="ClassicBorder"
																						   BorderBrush="{TemplateBinding BorderBrush}"
																						   BorderThickness="{TemplateBinding BorderThickness}"
																						   BorderStyle="AltRaised"
																						   Background="{TemplateBinding Background}"
																						   Height="{TemplateBinding Height}"
																						   Width="{TemplateBinding Width}">
                                                                <Path
																	Data="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}"
																	Fill="{TemplateBinding Foreground}"
																	HorizontalAlignment="Center"
																	VerticalAlignment="Center" />
                                                            </Themes:ClassicBorderDecorator>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="IsPressed" Value="True">
                                                                    <Setter Property="BorderStyle"
																			TargetName="ClassicBorder"
																			Value="AltPressed" />
                                                                </Trigger>
                                                                <Trigger Property="IsEnabled" Value="False">
                                                                    <Setter Property="Foreground"
																			Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" />
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </RepeatButton.Style>
                                    </RepeatButton>
                                </Viewbox>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>     

    <Style x:Key="ScrollBarStyleV" TargetType="{x:Type ScrollBar}">
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="False" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="Background" Value="{DynamicResource DynamicResourceControlLightBrushKey}" />
        <Setter Property="Foreground" Value="{DynamicResource DynamicResourceControlTextBrushKey}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Width" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
        <Setter Property="MinWidth" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid Background="{TemplateBinding Background}">
                        <Grid.RowDefinitions>
                            <RowDefinition
								MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}" />
                            <RowDefinition Height="1E-05*" />
                            <RowDefinition
								MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}" />
                        </Grid.RowDefinitions>
                        <Viewbox Stretch="Fill">
                            <RepeatButton Content="M 0 4 L 7 4 L 3.5 0 Z" Command="ScrollBar.LineUpCommand"
										  Height="{DynamicResource x:Static SystemParameters.VerticalScrollBarButtonHeightKey}"
										  MinWidth="{DynamicResource x:Static SystemParameters.VerticalScrollBarWidthKey}"
										  Background="{TemplateBinding Foreground}"
										  Foreground="{TemplateBinding Background}"
										  BorderBrush="{TemplateBinding BorderBrush}">
                                <RepeatButton.Style>
                                    <Style TargetType="{x:Type RepeatButton}">
                                        <Setter Property="OverridesDefaultStyle" Value="True" />
                                        <Setter Property="Background"
												Value="{DynamicResource DynamicResourceControlBrushKey}" />
                                        <Setter Property="Foreground"
												Value="{DynamicResource DynamicResourceControlTextBrushKey}" />
                                        <Setter Property="BorderBrush" Value="#00000000" />
                                        <Setter Property="BorderThickness" Value="2" />
                                        <Setter Property="MinWidth" Value="0" />
                                        <Setter Property="MinHeight" Value="0" />
                                        <Setter Property="IsTabStop" Value="False" />
                                        <Setter Property="Focusable" Value="False" />
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                    <Themes:ClassicBorderDecorator x:Name="ClassicBorder"
																				   BorderBrush="{TemplateBinding BorderBrush}"
																				   BorderThickness="{TemplateBinding BorderThickness}"
																				   BorderStyle="AltRaised"
																				   Background="{TemplateBinding Background}"
																				   Height="{TemplateBinding Height}"
																				   Width="{TemplateBinding Width}">
                                                        <Path
															Data="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}"
															Fill="{TemplateBinding Foreground}"
															HorizontalAlignment="Center" VerticalAlignment="Center" />
                                                    </Themes:ClassicBorderDecorator>
                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="IsPressed" Value="True">
                                                            <Setter Property="BorderStyle" TargetName="ClassicBorder"
																	Value="AltPressed" />
                                                        </Trigger>
                                                        <Trigger Property="IsEnabled" Value="False">
                                                            <Setter Property="Foreground"
																	Value="{DynamicResource DynamicResourceControlDarkDarkBrushKey}" />
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </RepeatButton.Style>
                            </RepeatButton>
                        </Viewbox>
                        <Rectangle Grid.Row="1" Fill="{TemplateBinding Background}" />
                        <Track x:Name="PART_Track" IsDirectionReversed="True" Grid.Row="1">
                            <Track.DecreaseRepeatButton>
                                <RepeatButton Command="ScrollBar.PageUpCommand">
                                    <RepeatButton.Style>
                                        <Style TargetType="{x:Type RepeatButton}">
                                            <Setter Property="OverridesDefaultStyle" Value="True" />
                                            <Setter Property="IsTabStop" Value="False" />
                                            <Setter Property="Focusable" Value="False" />
                                            <Setter Property="MinWidth"
													Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
                                            <Setter Property="MinHeight"
													Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}" />
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                        <Rectangle x:Name="PageButtonBackground" Fill="Transparent" />
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="IsPressed" Value="True">
                                                                <Setter Property="Fill"
																		TargetName="PageButtonBackground"
																		Value="{DynamicResource DynamicResourceControlDarkDarkBrushKey}" />
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </RepeatButton.Style>
                                </RepeatButton>
                            </Track.DecreaseRepeatButton>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton Command="ScrollBar.PageDownCommand">
                                    <RepeatButton.Style>
                                        <Style TargetType="{x:Type RepeatButton}">
                                            <Setter Property="OverridesDefaultStyle" Value="True" />
                                            <Setter Property="IsTabStop" Value="False" />
                                            <Setter Property="Focusable" Value="False" />
                                            <Setter Property="MinWidth"
													Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
                                            <Setter Property="MinHeight"
													Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}" />
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                        <Rectangle x:Name="PageButtonBackground" Fill="Transparent" />
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="IsPressed" Value="True">
                                                                <Setter Property="Fill"
																		TargetName="PageButtonBackground"
																		Value="{DynamicResource DynamicResourceControlDarkDarkBrushKey}" />
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </RepeatButton.Style>
                                </RepeatButton>
                            </Track.IncreaseRepeatButton>
                            <Track.Thumb>
                                <Thumb Background="{TemplateBinding Background}"
									   BorderBrush="{TemplateBinding BorderBrush}"
									   Foreground="{TemplateBinding Foreground}">
                                    <Thumb.Style>
                                        <Style TargetType="{x:Type Thumb}">
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type Thumb}">
                                                        <Themes:ClassicBorderDecorator BorderBrush="#00000000"
																					   BorderThickness="3"
																					   BorderStyle="Raised"
																					   Background="{TemplateBinding Foreground}" />
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </Thumb.Style>
                                </Thumb>
                            </Track.Thumb>
                        </Track>
                        <Viewbox Grid.Row="2" Stretch="Fill">
                            <RepeatButton Content="M 0 0 L 3.5 4 L 7 0 Z" Command="ScrollBar.LineDownCommand"
										  Height="{DynamicResource x:Static SystemParameters.VerticalScrollBarButtonHeightKey}"
										  MinWidth="{DynamicResource x:Static SystemParameters.VerticalScrollBarWidthKey}"
										  Background="{TemplateBinding Foreground}"
										  Foreground="{TemplateBinding Background}"
										  BorderBrush="{TemplateBinding BorderBrush}">
                                <RepeatButton.Style>
                                    <Style TargetType="{x:Type RepeatButton}">
                                        <Setter Property="OverridesDefaultStyle" Value="True" />
                                        <Setter Property="Background"
												Value="{DynamicResource DynamicResourceControlBrushKey}" />
                                        <Setter Property="Foreground"
												Value="{DynamicResource DynamicResourceControlTextBrushKey}" />
                                        <Setter Property="BorderBrush" Value="#00000000" />
                                        <Setter Property="BorderThickness" Value="2" />
                                        <Setter Property="MinWidth" Value="0" />
                                        <Setter Property="MinHeight" Value="0" />
                                        <Setter Property="IsTabStop" Value="False" />
                                        <Setter Property="Focusable" Value="False" />
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                    <Themes:ClassicBorderDecorator x:Name="ClassicBorder"
																				   BorderBrush="{TemplateBinding BorderBrush}"
																				   BorderThickness="{TemplateBinding BorderThickness}"
																				   BorderStyle="AltRaised"
																				   Background="{TemplateBinding Background}"
																				   Height="{TemplateBinding Height}"
																				   Width="{TemplateBinding Width}">
                                                        <Path
															Data="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}"
															Fill="{TemplateBinding Foreground}"
															HorizontalAlignment="Center" VerticalAlignment="Center" />
                                                    </Themes:ClassicBorderDecorator>
                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="IsPressed" Value="True">
                                                            <Setter Property="BorderStyle" TargetName="ClassicBorder"
																	Value="AltPressed" />
                                                        </Trigger>
                                                        <Trigger Property="IsEnabled" Value="False">
                                                            <Setter Property="Foreground"
																	Value="{DynamicResource DynamicResourceControlDarkBrushKey}" />
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </RepeatButton.Style>
                            </RepeatButton>
                        </Viewbox>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Width" Value="Auto" />
                <Setter Property="MinWidth" Value="0" />
                <Setter Property="Height"
						Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}" />
                <Setter Property="MinHeight"
						Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                            <Grid Background="{TemplateBinding Background}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition
										MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}" />
                                    <ColumnDefinition Width="1E-05*" />
                                    <ColumnDefinition
										MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}" />
                                </Grid.ColumnDefinitions>
                                <Viewbox Stretch="Fill">
                                    <RepeatButton Content="M 0 4 L 4 8 L 4 0 Z" Command="ScrollBar.LineLeftCommand"
												  MinHeight="{DynamicResource x:Static SystemParameters.HorizontalScrollBarHeightKey}"
												  Width="{DynamicResource x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}">
                                        <RepeatButton.Style>
                                            <Style TargetType="{x:Type RepeatButton}">
                                                <Setter Property="OverridesDefaultStyle" Value="True" />
                                                <Setter Property="Background"
														Value="{DynamicResource DynamicResourceControlBrushKey}" />
                                                <Setter Property="Foreground"
														Value="{DynamicResource DynamicResourceControlTextBrushKey}" />
                                                <Setter Property="BorderBrush" Value="#00000000" />
                                                <Setter Property="BorderThickness" Value="2" />
                                                <Setter Property="MinWidth" Value="0" />
                                                <Setter Property="MinHeight" Value="0" />
                                                <Setter Property="IsTabStop" Value="False" />
                                                <Setter Property="Focusable" Value="False" />
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                            <Themes:ClassicBorderDecorator x:Name="ClassicBorder"
																						   BorderBrush="{TemplateBinding BorderBrush}"
																						   BorderThickness="{TemplateBinding BorderThickness}"
																						   BorderStyle="AltRaised"
																						   Background="{TemplateBinding Background}"
																						   Height="{TemplateBinding Height}"
																						   Width="{TemplateBinding Width}">
                                                                <Path
																	Data="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}"
																	Fill="{TemplateBinding Foreground}"
																	HorizontalAlignment="Center"
																	VerticalAlignment="Center" />
                                                            </Themes:ClassicBorderDecorator>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="IsPressed" Value="True">
                                                                    <Setter Property="BorderStyle"
																			TargetName="ClassicBorder"
																			Value="AltPressed" />
                                                                </Trigger>
                                                                <Trigger Property="IsEnabled" Value="False">
                                                                    <Setter Property="Foreground"
																			Value="{DynamicResource DynamicResourceControlDarkBrushKey}" />
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </RepeatButton.Style>
                                    </RepeatButton>
                                </Viewbox>
                                <Rectangle Grid.Column="1">
                                    <Rectangle.Fill>
                                        <SolidColorBrush Color="#FF181B28" Opacity="0.5" />
                                    </Rectangle.Fill>
                                </Rectangle>
                                <Track x:Name="PART_Track" Grid.Column="1">
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton Command="ScrollBar.PageLeftCommand">
                                            <RepeatButton.Style>
                                                <Style TargetType="{x:Type RepeatButton}">
                                                    <Setter Property="OverridesDefaultStyle" Value="True" />
                                                    <Setter Property="IsTabStop" Value="False" />
                                                    <Setter Property="Focusable" Value="False" />
                                                    <Setter Property="MinHeight"
															Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}" />
                                                    <Setter Property="MinWidth"
															Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}" />
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                <Rectangle x:Name="PageButtonBackground"
																		   Fill="Transparent" />
                                                                <ControlTemplate.Triggers>
                                                                    <Trigger Property="IsPressed" Value="True">
                                                                        <Setter Property="Fill"
																				TargetName="PageButtonBackground"
																				Value="{DynamicResource DynamicResourceControlDarkDarkBrushKey}" />
                                                                    </Trigger>
                                                                </ControlTemplate.Triggers>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Style>
                                            </RepeatButton.Style>
                                        </RepeatButton>
                                    </Track.DecreaseRepeatButton>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton Command="ScrollBar.PageRightCommand">
                                            <RepeatButton.Style>
                                                <Style TargetType="{x:Type RepeatButton}">
                                                    <Setter Property="OverridesDefaultStyle" Value="True" />
                                                    <Setter Property="IsTabStop" Value="False" />
                                                    <Setter Property="Focusable" Value="False" />
                                                    <Setter Property="MinHeight"
															Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}" />
                                                    <Setter Property="MinWidth"
															Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}" />
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                <Rectangle x:Name="PageButtonBackground"
																		   Fill="Transparent" />
                                                                <ControlTemplate.Triggers>
                                                                    <Trigger Property="IsPressed" Value="True">
                                                                        <Setter Property="Fill"
																				TargetName="PageButtonBackground"
																				Value="{DynamicResource DynamicResourceControlDarkDarkBrushKey}" />
                                                                    </Trigger>
                                                                </ControlTemplate.Triggers>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Style>
                                            </RepeatButton.Style>
                                        </RepeatButton>
                                    </Track.IncreaseRepeatButton>
                                    <Track.Thumb>
                                        <Thumb>
                                            <Thumb.Style>
                                                <Style TargetType="{x:Type Thumb}">
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="{x:Type Thumb}">
                                                                <Themes:ClassicBorderDecorator BorderBrush="#00000000"
																							   BorderThickness="3"
																							   BorderStyle="Raised"
																							   Background="{DynamicResource DynamicResourceControlBrushKey}" />
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Style>
                                            </Thumb.Style>
                                        </Thumb>
                                    </Track.Thumb>
                                </Track>
                                <Viewbox Grid.Column="2" Stretch="Fill">
                                    <RepeatButton Content="M 0 0 L 0 8 L 4 4 Z" Command="ScrollBar.LineRightCommand"
												  MinHeight="{DynamicResource x:Static SystemParameters.HorizontalScrollBarHeightKey}"
												  Width="{DynamicResource x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}">
                                        <RepeatButton.Style>
                                            <Style TargetType="{x:Type RepeatButton}">
                                                <Setter Property="OverridesDefaultStyle" Value="True" />
                                                <Setter Property="Background"
														Value="{DynamicResource DynamicResourceControlBrushKey}" />
                                                <Setter Property="Foreground"
														Value="{DynamicResource DynamicResourceControlTextBrushKey}" />
                                                <Setter Property="BorderBrush" Value="#00000000" />
                                                <Setter Property="BorderThickness" Value="2" />
                                                <Setter Property="MinWidth" Value="0" />
                                                <Setter Property="MinHeight" Value="0" />
                                                <Setter Property="IsTabStop" Value="False" />
                                                <Setter Property="Focusable" Value="False" />
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                            <Themes:ClassicBorderDecorator x:Name="ClassicBorder"
																						   BorderBrush="{TemplateBinding BorderBrush}"
																						   BorderThickness="{TemplateBinding BorderThickness}"
																						   BorderStyle="AltRaised"
																						   Background="{TemplateBinding Background}"
																						   Height="{TemplateBinding Height}"
																						   Width="{TemplateBinding Width}">
                                                                <Path
																	Data="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}"
																	Fill="{TemplateBinding Foreground}"
																	HorizontalAlignment="Center"
																	VerticalAlignment="Center" />
                                                            </Themes:ClassicBorderDecorator>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="IsPressed" Value="True">
                                                                    <Setter Property="BorderStyle"
																			TargetName="ClassicBorder"
																			Value="AltPressed" />
                                                                </Trigger>
                                                                <Trigger Property="IsEnabled" Value="False">
                                                                    <Setter Property="Foreground"
																			Value="{DynamicResource DynamicResourceControlDarkBrushKey}" />
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </RepeatButton.Style>
                                    </RepeatButton>
                                </Viewbox>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="GridViewColumnHeaderGripper"
		   TargetType="{x:Type Thumb}">
        <Setter Property="Width"
				Value="18" />
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0,0"
									 EndPoint="0,1">
                    <LinearGradientBrush.GradientStops>
                        <GradientStopCollection>
                            <GradientStop Color="{DynamicResource BorderLightColor}"
										  Offset="0.0" />
                            <GradientStop Color="{DynamicResource BorderLightColor}"
										  Offset="1.0" />
                        </GradientStopCollection>
                    </LinearGradientBrush.GradientStops>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Padding="{TemplateBinding Padding}"
							Background="Transparent">
                        <Rectangle HorizontalAlignment="Center"
								   Width="1"
								   Fill="{TemplateBinding Background}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderBrush">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1"
									 StartPoint="0.5,0">
                    <GradientStop Color="Black"
								  Offset="0" />
                    <GradientStop Color="Black"
								  Offset="1" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type GridViewColumnHeader}"
		   TargetType="{x:Type GridViewColumnHeader}">
        <Setter Property="HorizontalContentAlignment"
				Value="Center" />
        <Setter Property="VerticalContentAlignment"
				Value="Center" />
        <Setter Property="Foreground"
				Value="{DynamicResource DynamicResourceControlTextBrushKey}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames
											Storyboard.TargetProperty="(Panel.Background).                     (GradientBrush.GradientStops)[1].(GradientStop.Color)"
											Storyboard.TargetName="HeaderBorder">
                                            <EasingColorKeyFrame KeyTime="0"
																 Value="{StaticResource ControlMouseOverColor}" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed" />
                                <VisualState x:Name="Disabled" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="HeaderBorder"
								BorderThickness="0,1,0,1"
								Padding="2,0,2,0">
                            <Border.BorderBrush>
                                <LinearGradientBrush StartPoint="0,0"
													 EndPoint="0,1">
                                    <LinearGradientBrush.GradientStops>
                                        <GradientStopCollection>
                                            <GradientStop Color="{DynamicResource BorderLightColor}"
														  Offset="0.0" />
                                            <GradientStop Color="{DynamicResource BorderDarkColor}"
														  Offset="1.0" />
                                        </GradientStopCollection>
                                    </LinearGradientBrush.GradientStops>
                                </LinearGradientBrush>

                            </Border.BorderBrush>
                            <Border.Background>

                                <LinearGradientBrush StartPoint="0,0"
													 EndPoint="0,1">
                                    <LinearGradientBrush.GradientStops>
                                        <GradientStopCollection>
                                            <GradientStop Color="{DynamicResource ControlLightColor}"
														  Offset="0.0" />
                                            <GradientStop Color="{DynamicResource ControlMediumColor}"
														  Offset="1.0" />
                                        </GradientStopCollection>
                                    </LinearGradientBrush.GradientStops>
                                </LinearGradientBrush>

                            </Border.Background>
                            <ContentPresenter x:Name="HeaderContent"
											  Margin="0,0,0,1"
											  RecognizesAccessKey="True"
											  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
											  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
											  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                        <Thumb x:Name="PART_HeaderGripper"
							   HorizontalAlignment="Right"
							   Margin="0,0,-9,0"
							   Style="{StaticResource GridViewColumnHeaderGripper}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Role"
					 Value="Floating">
                <Setter Property="Opacity"
						Value="0.7" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                            <Canvas x:Name="PART_FloatingHeaderCanvas">
                                <Rectangle Fill="#60000000"
										   Width="{TemplateBinding ActualWidth}"
										   Height="{TemplateBinding ActualHeight}" />
                            </Canvas>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="Role"
					 Value="Padding">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                            <Border x:Name="HeaderBorder"
									BorderThickness="0,1,0,1">
                                <Border.Background>
                                    <SolidColorBrush Color="{DynamicResource ControlLightColor}" />
                                </Border.Background>
                                <Border.BorderBrush>
                                    <LinearGradientBrush StartPoint="0,0"
														 EndPoint="0,1">
                                        <LinearGradientBrush.GradientStops>
                                            <GradientStopCollection>
                                                <GradientStop Color="{DynamicResource BorderLightColor}"
															  Offset="0.0" />
                                                <GradientStop Color="{DynamicResource BorderDarkColor}"
															  Offset="1.0" />
                                            </GradientStopCollection>
                                        </LinearGradientBrush.GradientStops>
                                    </LinearGradientBrush>
                                </Border.BorderBrush>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{x:Type ListView}"
		   TargetType="{x:Type ListView}">
        <Setter Property="SnapsToDevicePixels"
				Value="true" />
        <Setter Property="OverridesDefaultStyle"
				Value="true" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
				Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility"
				Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll"
				Value="true" />
        <Setter Property="VerticalContentAlignment"
				Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListView}">
                    <Border x:Name="Border"
							BorderThickness="1" Background="{TemplateBinding Background}"
							BorderBrush="{TemplateBinding BorderBrush}" OpacityMask="{TemplateBinding OpacityMask}">
                        <ScrollViewer
							Style="{DynamicResource {x:Static GridView.GridViewScrollViewerStyleKey}}"
							Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"
							Foreground="{TemplateBinding Foreground}"
							OpacityMask="{DynamicResource ScrolBarbackground}" Margin="0">
                            <ItemsPresenter />
                        </ScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsGrouping"
								 Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll"
									Value="false" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
								 Value="false">
                            <Setter TargetName="Border"
									Property="Background">
                                <Setter.Value>
                                    <SolidColorBrush Color="{DynamicResource DisabledBorderLightColor}" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type ListViewItem}"
		   TargetType="{x:Type ListViewItem}">
        <Setter Property="SnapsToDevicePixels"
				Value="true" />
        <Setter Property="OverridesDefaultStyle"
				Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border x:Name="Border"
							Padding="2"
							SnapsToDevicePixels="true"
							Background="Transparent">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver" />
                                <VisualState x:Name="Disabled" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualState x:Name="Unselected" />
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
																	  Storyboard.TargetProperty="(Panel.Background).                     (SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0"
																 Value="{StaticResource SelectedBackgroundColor}" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="SelectedUnfocused">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
																	  Storyboard.TargetProperty="(Panel.Background).                     (SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0"
																 Value="{StaticResource SelectedUnfocusedColor}" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <GridViewRowPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="TabControlStyle1" TargetType="{x:Type TabControl}">
        <Setter Property="Foreground" Value="{DynamicResource DynamicResourceControlTextBrushKey}" />
        <Setter Property="Background" Value="{DynamicResource DynamicResourceControlBrushKe}" />
        <Setter Property="BorderBrush" Value="#00000000" />
        <Setter Property="BorderThickness" Value="3" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="MinWidth" Value="10" />
        <Setter Property="MinHeight" Value="10" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">

                    <Grid ClipToBounds="True" SnapsToDevicePixels="True" KeyboardNavigation.TabNavigation="Local">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Name="ColumnDefinition0" />
                            <ColumnDefinition x:Name="ColumnDefinition1" Width="0" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition x:Name="RowDefinition0" Height="Auto" MinHeight="30" />
                            <RowDefinition x:Name="RowDefinition1" />
                        </Grid.RowDefinitions>
                        <TabPanel x:Name="HeaderPanel" Background="{x:Null}" Grid.Column="0" IsItemsHost="True"
								  Margin="0,0,132,0" Grid.Row="0" KeyboardNavigation.TabIndex="1" Panel.ZIndex="1" />
                        <Grid x:Name="ContentPanel" Grid.Column="0"
							  KeyboardNavigation.DirectionalNavigation="Contained" Grid.Row="1"
							  KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local"
							  Grid.ColumnSpan="1">
                            <Themes:ClassicBorderDecorator BorderBrush="{TemplateBinding BorderBrush}"
														   BorderThickness="{TemplateBinding BorderThickness}"
														   BorderStyle="Raised"
														   Background="{TemplateBinding Background}">
                                <ContentPresenter x:Name="PART_SelectedContentHost"
												  ContentTemplate="{TemplateBinding SelectedContentTemplate}"
												  Content="{TemplateBinding SelectedContent}"
												  ContentStringFormat="{TemplateBinding SelectedContentStringFormat}"
												  ContentSource="SelectedContent" Margin="2"
												  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Themes:ClassicBorderDecorator>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TabStripPlacement" Value="Bottom">
                            <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="1" />
                            <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0" />
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*" />
                            <Setter Property="Height" TargetName="RowDefinition1" Value="Auto" />
                            <Setter Property="Margin" TargetName="HeaderPanel" Value="2,0,2,2" />
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Left">
                            <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="0" />
                            <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0" />
                            <Setter Property="Grid.Column" TargetName="HeaderPanel" Value="0" />
                            <Setter Property="Grid.Column" TargetName="ContentPanel" Value="1" />
                            <Setter Property="Width" TargetName="ColumnDefinition0" Value="Auto" />
                            <Setter Property="Width" TargetName="ColumnDefinition1" Value="*" />
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*" />
                            <Setter Property="Height" TargetName="RowDefinition1" Value="0" />
                            <Setter Property="Margin" TargetName="HeaderPanel" Value="2,2,0,2" />
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Right">
                            <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="0" />
                            <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0" />
                            <Setter Property="Grid.Column" TargetName="HeaderPanel" Value="1" />
                            <Setter Property="Grid.Column" TargetName="ContentPanel" Value="0" />
                            <Setter Property="Width" TargetName="ColumnDefinition0" Value="*" />
                            <Setter Property="Width" TargetName="ColumnDefinition1" Value="Auto" />
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*" />
                            <Setter Property="Height" TargetName="RowDefinition1" Value="0" />
                            <Setter Property="Margin" TargetName="HeaderPanel" Value="0,2,2,2" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource DynamicResourceGrayTextBrushKey}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TabItemStyle1" TargetType="{x:Type TabItem}">
        <Setter Property="FocusVisualStyle">
            <Setter.Value>
                <Style>
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Rectangle Margin="4,4,4,2" SnapsToDevicePixels="True"
										   Stroke="{DynamicResource DynamicResourceControlTextBrushKey}"
										   StrokeThickness="1" StrokeDashArray="1 2" />
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Padding" Value="12,2" />
        <Setter Property="Foreground" Value="{DynamicResource DynamicResourceControlTextBrushKey}" />
        <Setter Property="Background" Value="{DynamicResource DynamicResourceControlBrushKey}" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="Storyboard1">
                            <DoubleAnimationUsingKeyFrames
								Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)"
								Storyboard.TargetName="ClassicBorder">
                                <EasingDoubleKeyFrame KeyTime="0" Value=".95" />
                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0.9" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="Storyboard2" />
                        <Storyboard x:Key="OnMouseEnter1">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
														   Storyboard.TargetName="contentPresenter"
														   RepeatBehavior="0:0:4">
                                <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                                <EasingDoubleKeyFrame KeyTime="0:0:0.6" Value=".5" />
                                <EasingDoubleKeyFrame KeyTime="0:0:1.4" Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
														   Storyboard.TargetName="ClassicBorder" RepeatBehavior="0:0:2">
                                <EasingDoubleKeyFrame KeyTime="0" Value=".8" />
                                <EasingDoubleKeyFrame KeyTime="0:0:0.6" Value="1" />
                                <EasingDoubleKeyFrame KeyTime="0:0:1.4" Value=".8" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Themes:ClassicBorderDecorator x:Name="ClassicBorder" BorderBrush="{TemplateBinding BorderBrush}"
												   BorderThickness="2" BorderStyle="TabTop" SnapsToDevicePixels="True"
												   UseLayoutRounding="False" RenderTransformOrigin="0.5,0.5"
												   Background="{TemplateBinding Background}">
                        <Themes:ClassicBorderDecorator.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform />
                                <SkewTransform />
                                <RotateTransform />
                                <TranslateTransform />
                            </TransformGroup>
                        </Themes:ClassicBorderDecorator.RenderTransform>
                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding HeaderTemplate}"
										  Content="{TemplateBinding Header}"
										  ContentStringFormat="{TemplateBinding HeaderStringFormat}"
										  ContentSource="Header" Margin="{TemplateBinding Padding}"
										  RecognizesAccessKey="True"
										  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
										  RenderTransformOrigin="0.5,0.5" VerticalAlignment="Stretch"
										  OverridesDefaultStyle="False">
                            <ContentPresenter.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform />
                                    <SkewTransform />
                                    <RotateTransform />
                                    <TranslateTransform />
                                </TransformGroup>
                            </ContentPresenter.RenderTransform>
                        </ContentPresenter>
                    </Themes:ClassicBorderDecorator>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="UIElement.MouseEnter">
                            <BeginStoryboard x:Name="OnMouseEnter1_BeginStoryboard"
											 Storyboard="{StaticResource OnMouseEnter1}" />
                        </EventTrigger>
                        <EventTrigger RoutedEvent="UIElement.MouseLeave">
                            <StopStoryboard BeginStoryboardName="OnMouseEnter1_BeginStoryboard" />
                        </EventTrigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Trigger.ExitActions>
                                <BeginStoryboard x:Name="Storyboard2_BeginStoryboard"
												 Storyboard="{StaticResource Storyboard1}" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource Storyboard2}" />
                            </Trigger.EnterActions>
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Bottom">
                            <Setter Property="BorderStyle" TargetName="ClassicBorder" Value="TabBottom" />
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Left">
                            <Setter Property="BorderStyle" TargetName="ClassicBorder" Value="TabLeft" />
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Right">
                            <Setter Property="BorderStyle" TargetName="ClassicBorder" Value="TabRight" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True" />
                                <Condition Property="TabStripPlacement" Value="Top" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Margin" Value="-2" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True" />
                                <Condition Property="TabStripPlacement" Value="Bottom" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Margin" Value="-2" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True" />
                                <Condition Property="TabStripPlacement" Value="Left" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Padding" Value="11,2,14,2" />
                            <Setter Property="Margin" Value="-2" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True" />
                                <Condition Property="TabStripPlacement" Value="Right" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Padding" Value="14,2,11,2" />
                            <Setter Property="Margin" Value="-2" />
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource DynamicResourceGrayTextBrushKey}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ProgressBarStyle1" TargetType="{x:Type ProgressBar}">
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
        <Setter Property="BorderBrush" Value="#00000000"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ProgressBar}">
                    <Themes:ClassicBorderDecorator x:Name="TemplateRoot" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" BorderStyle="ThinPressed" Background="{TemplateBinding Background}">
                        <DockPanel x:Name="PART_Track" Margin="0,0,2,2" LastChildFill="False">
                            <Rectangle x:Name="PART_Indicator" Fill="{TemplateBinding Foreground}" RadiusX="3" RadiusY="20"/>
                        </DockPanel>
                    </Themes:ClassicBorderDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Orientation" Value="Vertical">
                            <Setter Property="LayoutTransform" TargetName="TemplateRoot">
                                <Setter.Value>
                                    <RotateTransform Angle="-90"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="ButtonBaseControalBar1" TargetType="{x:Type ButtonBase}">
        <ControlTemplate.Resources>
            <Storyboard x:Key="Storyboard1">
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ContentContainer">
                    <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:0.8" Value="0.8"/>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter">
                    <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:0.8" Value="0.8"/>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="Storyboard2">
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ContentContainer">
                    <EasingDoubleKeyFrame KeyTime="0" Value="0.8"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:0.8" Value="1"/>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter">
                    <EasingDoubleKeyFrame KeyTime="0" Value="0.8"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:0.8" Value="1"/>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="OnMouseEnter1">
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ContentContainer">
                    <EasingDoubleKeyFrame KeyTime="0" Value="0.8"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0.9"/>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter">
                    <EasingDoubleKeyFrame KeyTime="0" Value="0.8"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0.9"/>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="OnMouseLeave1">
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ContentContainer">
                    <EasingDoubleKeyFrame KeyTime="0" Value="0.9"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0.8"/>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter">
                    <EasingDoubleKeyFrame KeyTime="0" Value="0.9"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0.8"/>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
        </ControlTemplate.Resources>
        <Themes:ClassicBorderDecorator x:Name="ContentContainer" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="3" BorderStyle="Raised" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
        </Themes:ClassicBorderDecorator>
        <ControlTemplate.Triggers>
            <Trigger Property="IsKeyboardFocused" Value="True">
                <Trigger.ExitActions>
                    <BeginStoryboard x:Name="Storyboard1_BeginStoryboard1" Storyboard="{StaticResource Storyboard1}"/>
                </Trigger.ExitActions>
                <Trigger.EnterActions>
                    <BeginStoryboard x:Name="Storyboard2_BeginStoryboard3" Storyboard="{StaticResource Storyboard2}"/>
                </Trigger.EnterActions>
                <Setter Property="BorderStyle" TargetName="ContentContainer" Value="RaisedFocused"/>
            </Trigger>
            <Trigger Property="Button.IsDefaulted" Value="True">
                <Setter Property="BorderStyle" TargetName="ContentContainer" Value="RaisedFocused"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Trigger.ExitActions>
                    <BeginStoryboard x:Name="Storyboard1_BeginStoryboard" Storyboard="{StaticResource Storyboard1}"/>
                </Trigger.ExitActions>
                <Trigger.EnterActions>
                    <BeginStoryboard x:Name="Storyboard2_BeginStoryboard" Storyboard="{StaticResource Storyboard2}"/>
                </Trigger.EnterActions>
                <Setter Property="BorderStyle" TargetName="ContentContainer" Value="RaisedPressed"/>
            </Trigger>
            <EventTrigger RoutedEvent="ButtonBase.Click">
                <BeginStoryboard x:Name="Storyboard1_BeginStoryboard2" Storyboard="{StaticResource Storyboard1}"/>
            </EventTrigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
            </Trigger>
            <Trigger Property="IsMouseDirectlyOver" Value="True">
                <Trigger.ExitActions>
                    <BeginStoryboard x:Name="Storyboard1_BeginStoryboard3" Storyboard="{StaticResource Storyboard1}"/>
                </Trigger.ExitActions>
                <Trigger.EnterActions>
                    <BeginStoryboard x:Name="Storyboard2_BeginStoryboard2" Storyboard="{StaticResource Storyboard2}"/>
                </Trigger.EnterActions>
            </Trigger>
            <EventTrigger RoutedEvent="FrameworkElement.Loaded">
                <BeginStoryboard x:Name="Storyboard1_BeginStoryboard4" Storyboard="{StaticResource Storyboard1}"/>
            </EventTrigger>
            <EventTrigger RoutedEvent="UIElement.MouseEnter">
                <BeginStoryboard x:Name="OnMouseEnter1_BeginStoryboard" Storyboard="{StaticResource OnMouseEnter1}"/>
            </EventTrigger>
            <EventTrigger RoutedEvent="UIElement.MouseLeave">
                <BeginStoryboard x:Name="OnMouseLeave1_BeginStoryboard" Storyboard="{StaticResource OnMouseLeave1}"/>
            </EventTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="ScrollViewerControlTemplate1" TargetType="{x:Type ScrollViewer}">
        <Grid x:Name="Grid" Background="{TemplateBinding Background}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Rectangle x:Name="Corner" Grid.Column="1" Fill="{TemplateBinding Background}" Grid.Row="1"/>
            <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="0" Margin="{TemplateBinding Padding}" Grid.Row="0"/>
            <ScrollBar x:Name="PART_VerticalScrollBar" AutomationProperties.AutomationId="VerticalScrollBar" Cursor="Arrow" Grid.Column="1" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0" Grid.Row="0" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}" Background="{TemplateBinding Background}" Foreground="{TemplateBinding OpacityMask}" Style="{DynamicResource ScrollBarStyleV}"/>
            <ScrollBar x:Name="PART_HorizontalScrollBar" AutomationProperties.AutomationId="HorizontalScrollBar" Cursor="Arrow" Grid.Column="0" Maximum="{TemplateBinding ScrollableWidth}" Minimum="0" Orientation="Horizontal" Grid.Row="1" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}" Background="{TemplateBinding Background}" Foreground="{TemplateBinding OpacityMask}" Style="{DynamicResource ScrollBarStyleH}"/>
        </Grid>
    </ControlTemplate>      

</ResourceDictionary>